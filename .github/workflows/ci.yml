name: ci/cd

on:
  push:
    branches: [ main ]
    paths:
      - 'src'
      - 'build.gradle.kts'
      - 'Dockerfile'
      - 'settings.gradle.kts'
      - 'version.txt'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Build
        run: |
          chmod a+x ./gradlew
          ./gradlew build

      - name: Share jacoco test report with other jobs
        uses: actions/upload-artifact@v2
        with:
          name: jacoco_test_report
          path: build/reports/jacoco/test/jacocoTestReport.csv

  tag:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Read upimage version
        run: |
          echo "UPIMAGE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Read latest tag
        run: echo "TAG=$(git tag -l v${{ env.UPIMAGE_VERSION }})" >> $GITHUB_ENV

      - name: Verify version
        if: ${{ env.TAG != '' }}
        run: exit 1

      - name: Create release with tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.UPIMAGE_VERSION }}
          release_name: v${{ env.UPIMAGE_VERSION }}

      - name: Set upload url
        run: echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt

      - name: Share upload url with other jobs
        uses: actions/upload-artifact@v2
        with:
          name: upload_url
          path: upload_url.txt

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get test report
        uses: actions/download-artifact@v2
        with:
          name: jacoco_test_report

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: jacocoTestReport.csv

      - name: Bump up docker image version
        run: |
          npm install js-yaml
          node .github/scripts/bump-version-yaml.js docker-compose.yml ${{ env.UPIMAGE_VERSION }}
          git add docker-compose.yml
          git add .github/badges
          git config user.name "awesome"
          git config user.email "awesome@github.com"
          git commit -m "Bump image version: devecor/upimage:${{ env.UPIMAGE_VERSION }}"
          git push

  publish-jar:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Get upload url
        uses: actions/download-artifact@v2
        with:
          name: upload_url

      - name: Set upload url into env
        run: echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV

      - name: Read upimage version
        run: |
          echo "UPIMAGE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Build
        run: |
          chmod a+x ./gradlew
          ./gradlew build

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./build/libs/upimage.jar
          asset_name: upimage-${{ env.UPIMAGE_VERSION }}.jar
          asset_content_type: application/zip

  publish-docker-image:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Build
        run: |
          chmod a+x ./gradlew
          ./gradlew build -x test

      - name: Read upimage version
        run: |
          echo "UPIMAGE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Login docker hub
        run: docker login -u devecorsoft -p ${{ secrets.DOCKER_TOKEN }}

      - name: Build docker image
        run: docker build -t devecorsoft/upimage:${{ env.UPIMAGE_VERSION }} -t devecorsoft/upimage:latest .

      - name: Publish docker image
        run: |
          docker push devecorsoft/upimage:latest
          docker push devecorsoft/upimage:${{ env.UPIMAGE_VERSION }}
          docker logout
